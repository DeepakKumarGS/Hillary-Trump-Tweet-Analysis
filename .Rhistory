ggplot(temp,aes(x=StartupName,y=TotalInvestment,fill=StartupName))+geom_bar(stat="identity",position="identity",width=0.5)+facet_wrap(~Qtr,scales=c("free"))+scale_y_continuous(labels=scales::comma)+theme(legend.position="none",axis.text.x = element_text(angle=90,vjust=0.5),plot.title=element_text(color="blue",size=10,face="italic"))+labs(x="",y="Total Investment",title="Softbank Investments over the 3 years")+theme_fivethirtyeight()
library(tidyverse)
tidyverse_update()
install.packages(c("checkmate", "data.table", "glue", "lazyeval", "quantreg"))
library(tidyverse)
remove.packages("tidyverse")
install.packages('tidyverse',dependencies = TRUE)
library(tidyverse)
knitr::opts_chunk$set(echo = TRUE,warning=FALSE,message = FALSE)
library(plyr)
library(tidyverse)
library(formattable)
library(splitstackshape)
library(jsonlite)
movie=read_csv("tmdb_5000_movies.csv",col_names=TRUE,na="NA")
credits=read_csv("tmdb_5000_credits.csv",col_names=TRUE,na="NA")
View(movie)
movie=movie %>% filter(nchar(genres)>2) %>% mutate(js=lapply(genres,fromJSON)) %>% unnest(js)
temp=ddply(movie,-.(id1,name),summarise,id=paste(unique(id1),collapse=","),genres=paste(unique(name),collapse=","))
temp=ddply(movie,.(-id1,-name),summarise,id=paste(unique(id1),collapse=","),genres=paste(unique(name),collapse=","))
temp=ddply(movie,.(-c(id1,name)),summarise,id=paste(unique(id1),collapse=","),genres=paste(unique(name),collapse=","))
temp=ddply(movie,-c(id1,name),summarise,id=paste(unique(id1),collapse=","),genres=paste(unique(name),collapse=","))
temp=aggregate(.~(id1,name),movie,function(x) tostring(unique(x)))
temp=aggregate(.~c(id1,name),movie,function(x) tostring(unique(x)))
temp=aggregate(.~(id1),movie,function(x) tostring(unique(x)))
groupby=c("id1","name")
temp=aggregate(.~groupby,movie,function(x) toString(unique(x)))
temp=aggregate(.~name,movie,function(x) toString(unique(x)))
View(temp)
temp=aggregate(budget~.,data=movie,paste,collapse=",")
View(temp)
temp=aggregate(.~name,data=movie,paste,collapse=",")
temp=aggregate(.~budget,data=movie,paste,collapse=",")
temp=paste(movie[!which(duplicated(movie[,-c(21,22)])),],sep=",")
movie=read_csv("tmdb_5000_movies.csv",col_names=TRUE,na="NA")
knitr::opts_chunk$set(echo = TRUE,warning=FALSE,message = FALSE)
movie=read_csv("tmdb_5000_movies.csv",col_names=TRUE,na="NA")
genrejson=rbindlist(fromJSON(movie$genres))
genrejson=bind_cols(movie[,2],stream_in(textConnection(gsub("\\n"," ",movie$genres))))
genrejson=bind_cols(movie[,],stream_in(textConnection(gsub("\\n"," ",movie$genres))))
genrejson=bind_cols(movie[,1],stream_in(textConnection(gsub("\\n"," ",movie$genres))))
genre=movie %>% filter(nchar(genres)>2) %>% mutate(js=lapply(genres,fromJSON)) %>% unnest(js) %>% select(id,title,genre=name)
View(genre)
genre=aggregate(genre~.,movie,paste,collapse=",")
genre=aggregate(genre ~,movie,paste,collapse=",")
genre=aggregate(genre ~.,movie,paste,collapse=",")
genre=aggregate(genre ~.,data=genre,paste,collapse=",")
genre=movie %>% filter(nchar(genres)>2) %>% mutate(js=lapply(genres,fromJSON)) %>% unnest(js) %>% select(id,title,genre=name) #Convert JSON format into data frame
temp=genre %>% group_by(genre) %>% summarise(count=length(genre)) %>% arrange(desc(count))
View(temp)
library(wordcloud)
library(RColorBrewer)
wordcloud(words=temp$genre,freq=temp$count,min.freq=100,max.words = 20,random.order=FALSE,random.color=FALSE,rot.per=0.35,colors = brewer.pal(20,"Dark2"))
wordcloud(words=temp$genre,freq=temp$count,min.freq=100,max.words = 20,random.order=FALSE,random.color=FALSE,rot.per=0.35,colors = brewer.pal(20,"Dark2"),main="Genres Representation")
wordcloud(words=temp$genre,freq=temp$count,min.freq=100,max.words = 20,random.order=FALSE,random.color=FALSE,rot.per=0.35,colors = brewer.pal(20,"Dark2"),scale=1)
wordcloud(words=temp$genre,freq=temp$count,min.freq=100,max.words = 20,random.order=FALSE,random.color=FALSE,rot.per=0.35,colors = brewer.pal(20,"Dark2"),scale=c(4,.5))
wordcloud(words=temp$genre,freq=temp$count,min.freq=100,max.words = 20,random.order=FALSE,random.color=FALSE,rot.per=0.35,colors = brewer.pal(20,"Dark2"),scale=c(2,.5))
wordcloud(words=temp$genre,freq=temp$count,min.freq=100,max.words = 20,random.order=FALSE,random.color=FALSE,rot.per=0.35,colors = brewer.pal(20,"Dark2"),scale=c(4,1))
View(movie)
glimpse(credits)
knitr::opts_chunk$set(echo = TRUE,warning=FALSE,message = FALSE)
library(plyr)
library(tidyverse)
library(formattable)
library(splitstackshape)
library(jsonlite)
library(wordcloud)
library(RColorBrewer)
movie=read_csv("tmdb_5000_movies.csv",col_names=TRUE,na="NA")
credits=read_csv("tmdb_5000_credits.csv",col_names=TRUE,na="NA")
genre=movie %>% filter(nchar(genres)>2) %>% mutate(js=lapply(genres,fromJSON)) %>% unnest(js) %>% select(id,title,genre=name) #Convert JSON format into data frame
View(movie)
#genre=aggregate(genre ~.,data=genre,paste,collapse=",") # remove duplicates
temp=genre %>% group_by(genre) %>% summarise(count=length(genre)) %>% arrange(desc(count))#A look at the genre variety in our dataset
#wordcloud
wordcloud(words=temp$genre,freq=temp$count,min.freq=100,max.words = 20,random.order=FALSE,random.color=FALSE,rot.per=0.35,colors = brewer.pal(20,"Dark2"),scale=c(4,1))
library(ggthemes)
movie %>% select(original_title,budget) %>% arrange(desc(budget)) %>% head(10) %>%  ggplot(aes(reorder(original_title,budget),budget,fill=original_title))+geom_bar(stat="identity")+theme(axis.text.x = element_text(angle=45,vjust=0.5),plot.title=element_text(color="Red",face="italics"),legend.position="none")+scale_y_continuous(labels=scales::comma)+labs(x="",y="Total Budget in $",title="Highest Budget Movies -Top 10")
movie %>% select(original_title,budget) %>% arrange(desc(budget)) %>% head(10) %>%  ggplot(aes(reorder(original_title,budget),budget,fill=original_title))+geom_bar(stat="identity")+theme(axis.text.x = element_text(angle=45,vjust=0.5),plot.title=element_text(color="Red",face="italic"),legend.position="none")+scale_y_continuous(labels=scales::comma)+labs(x="",y="Total Budget in $",title="Highest Budget Movies -Top 10")
movie %>% select(original_title,budget) %>% drop_na(original_title)%>% arrange(desc(budget)) %>% head(10) %>%  ggplot(aes(reorder(original_title,budget),budget,fill=original_title))+geom_bar(stat="identity")+theme(axis.text.x = element_text(angle=45,vjust=0.5),plot.title=element_text(color="Red",face="italic"),legend.position="none")+scale_y_continuous(labels=scales::comma)+labs(x="",y="Total Budget in $",title="Highest Budget Movies -Top 10")
movie %>% select(original_title,budget) %>% drop_na(original_title)%>% arrange(desc(budget)) %>% head(10) %>%  ggplot(aes(reorder(original_title,budget),budget,fill=original_title))+geom_bar(stat="identity")+theme(axis.text.x = element_text(angle=45,vjust=0.1),plot.title=element_text(color="Red",face="italic"),legend.position="none")+scale_y_continuous(labels=scales::comma)+labs(x="",y="Total Budget in $",title="Highest Budget Movies -Top 10")
movie %>% select(original_title,budget) %>% drop_na(original_title)%>% arrange(desc(budget)) %>% head(10) %>%  ggplot(aes(reorder(original_title,budget),budget,fill=original_title))+geom_bar(stat="identity")+theme(axis.text.x = element_text(angle=45),plot.title=element_text(color="Red",face="italic"),legend.position="none")+scale_y_continuous(labels=scales::comma)+labs(x="",y="Total Budget in $",title="Highest Budget Movies -Top 10")
movie %>% select(original_title,budget) %>% drop_na(original_title)%>% arrange(desc(budget)) %>% head(10) %>%  ggplot(aes(reorder(original_title,budget),budget,fill=original_title))+geom_bar(stat="identity")+theme(axis.text.x = element_text(angle=90),plot.title=element_text(color="Red",face="italic"),legend.position="none")+scale_y_continuous(labels=scales::comma)+labs(x="",y="Total Budget in $",title="Highest Budget Movies -Top 10")
movie %>% select(original_title,budget) %>% drop_na(original_title)%>% arrange(desc(budget)) %>% head(10) %>%  ggplot(aes(reorder(original_title,budget),budget,fill=original_title))+geom_bar(stat="identity")+theme(axis.text.x = element_text(angle=90),plot.title=element_text(color="Red",face="italic"),legend.position="none")+scale_y_continuous(labels=scales::comma)+labs(x="",y="Total Budget in $",title="Highest Budget Movies -Top 10")
movie %>% select(original_title,budget) %>% drop_na(original_title)%>% arrange(desc(budget)) %>% head(10) %>%  ggplot(aes(reorder(original_title,budget),budget,fill=original_title))+geom_bar(stat="identity")+theme(axis.text.x = element_text(angle=90),plot.title=element_text(color="Red",face="italic"),legend.position="none")+scale_y_continuous(labels=scales::comma)+labs(x="",y="Total Budget in $",title="Highest Budget Movies -Top 10")
movie %>% select(original_title,budget) %>% drop_na(original_title)%>% arrange(desc(budget)) %>% head(10) %>%  ggplot(aes(reorder(original_title,budget),budget,fill=original_title))+geom_bar(stat="identity")+theme(axis.text.x = element_text(angle=90),plot.title=element_text(color="Red",face="italic"),legend.position="none")+scale_y_continuous(labels=scales::comma)+labs(x="",y="Total Budget in $",title="Highest Budget Movies -Top 10")
View(genre)
View(temp)
View(credits)
View(movie)
movie %>% select(original_title,revenue) %>% drop_na(original_title)%>% arrange(desc(revenue)) %>% head(10) %>%  ggplot(aes(reorder(original_title,revenue),revenue,fill=original_title))+geom_bar(stat="identity")+theme(axis.text.x = element_text(angle=90),plot.title=element_text(color="Red",face="italic"),legend.position="none")+scale_y_continuous(labels=scales::comma)+labs(x="",y="Total Budget in $",title="Highest Grossing Movies -Top 10")
movie %>% select(original_title,revenue) %>% drop_na(original_title)%>% arrange(desc(revenue)) %>% head(10) %>%  ggplot(aes(reorder(original_title,revenue),revenue,fill=original_title))+geom_bar(stat="identity")+theme(axis.text.x = element_text(angle=90),plot.title=element_text(color="Red",face="italic"),legend.position="none")+scale_y_continuous(limits=(0,500000000),breaks=seq(0,500000000,150000000),labels=scales::comma)+labs(x="",y="Total Budget in $",title="Highest Grossing Movies -Top 10")
movie %>% select(original_title,revenue) %>% drop_na(original_title)%>% arrange(desc(revenue)) %>% head(10) %>%  ggplot(aes(reorder(original_title,revenue),revenue,fill=original_title))+geom_bar(stat="identity")+theme(axis.text.x = element_text(angle=90),plot.title=element_text(color="Red",face="italic"),legend.position="none")+scale_y_continuous(limits=c(0,500000000),breaks=seq(0,500000000,150000000),labels=scales::comma)+labs(x="",y="Total Budget in $",title="Highest Grossing Movies -Top 10")
temp=movie %>% select(original_title,revenue) %>% drop_na(original_title)%>% arrange(desc(revenue)) %>% head(10)  #ggplot(aes(reorder(original_title,revenue),revenue,fill=original_title))+geom_bar(stat="identity")+theme(axis.text.x = element_text(angle=90),plot.title=element_text(color="Red",face="italic"),legend.position="none")+scale_y_continuous(limits=c(0,500000000),breaks=seq(0,500000000,150000000),labels=scales::comma)+labs(x="",y="Total Budget in $",title="Highest Grossing Movies -Top 10")
View(temp)
movie %>% select(original_title,revenue) %>% drop_na(original_title)%>% arrange(desc(revenue)) %>% head(10)  %>% ggplot(aes(reorder(original_title,revenue),revenue,fill=original_title))+geom_bar(stat="identity")+theme(axis.text.x = element_text(angle=90),plot.title=element_text(color="Red",face="italic"),legend.position="none")+scale_y_continuous(limits=c(0,300000000),breaks=seq(0,300000000,100000000),labels=scales::comma)+labs(x="",y="Total Budget in $",title="Highest Grossing Movies -Top 10")
movie %>% select(original_title,revenue) %>% drop_na(original_title)%>% arrange(desc(revenue)) %>% head(10)  %>% ggplot(aes(reorder(original_title,revenue),revenue,fill=original_title))+geom_bar(stat="identity")+theme(axis.text.x = element_text(angle=90),plot.title=element_text(color="Red",face="italic"),legend.position="none")+scale_y_continuous(limits=c(0,300000000),breaks=seq(0,300000000,10000000),labels=scales::comma)+labs(x="",y="Total Budget in $",title="Highest Grossing Movies -Top 10")
movie %>% select(original_title,revenue) %>% drop_na(original_title)%>% arrange(desc(revenue)) %>% head(10)  %>% ggplot(aes(reorder(original_title,revenue),revenue,fill=original_title))+geom_bar(stat="identity")+theme(axis.text.x = element_text(angle=90),plot.title=element_text(color="Red",face="italic"),legend.position="none")+scale_y_continuous(labels=scales::comma)+labs(x="",y="Total Budget in $",title="Highest Grossing Movies -Top 10")
movie %>% select(original_title,revenue) %>% drop_na(original_title)%>% arrange(desc(revenue)) %>% head(10)  %>% ggplot(aes(reorder(original_title,revenue),revenue,fill=original_title))+geom_bar(stat="identity")+theme(axis.text.x = element_text(angle=90),plot.title=element_text(color="Red",face="italic"),legend.position="none")+scale_y_continuous(labels=scales::comma)+labs(x="",y="Total Revenue in $",title="Highest Grossing Movies -Top 10")
movie %>% select(original_title,revenue) %>% drop_na(original_title)%>% arrange(desc(revenue)) %>% head(10)  %>% ggplot(aes(reorder(original_title,revenue),revenue,fill=original_title))+geom_bar(stat="identity")+theme(axis.text.x = element_text(angle=90),plot.title=element_text(color="Red",face="italic"),legend.position="none")+scale_y_continuous(limits=c(0,3000000000),breaks=seq(0,3000000000,1500000000),labels=scales::comma)+labs(x="",y="Total Revenue in $",title="Highest Grossing Movies -Top 10")
movie %>% select(original_title,revenue) %>% drop_na(original_title)%>% arrange(desc(revenue)) %>% head(10)  %>% ggplot(aes(reorder(original_title,revenue),revenue,fill=original_title))+geom_bar(stat="identity")+theme(axis.text.x = element_text(angle=90),plot.title=element_text(color="Red",face="italic"),legend.position="none")+scale_y_continuous(limits=c(0,3000000000),breaks=seq(0,3000000000,1000000000),labels=scales::comma)+labs(x="",y="Total Revenue in $",title="Highest Grossing Movies -Top 10")
movie %>% select(original_title,revenue) %>% drop_na(original_title)%>% arrange(desc(revenue)) %>% head(10)  %>% ggplot(aes(reorder(original_title,revenue),revenue,fill=original_title))+geom_bar(stat="identity")+theme(axis.text.x = element_text(angle=90),plot.title=element_text(color="Red",face="italic"),legend.position="none")+scale_y_continuous(limits=c(0,3000000000),breaks=seq(0,3000000000,500000000),labels=scales::comma)+labs(x="",y="Total Revenue in $",title="Highest Grossing Movies -Top 10")
View(genre)
knitr::opts_chunk$set(echo = TRUE,warning=FALSE,message = FALSE)
library(plyr)
library(tidyverse)
library(formattable)
library(splitstackshape)
library(jsonlite)
library(wordcloud)
library(RColorBrewer)
library(ggthemes)
library(tm)
library(RSentiment)
movie=read_csv("tmdb_5000_movies.csv",col_names=TRUE,na="NA")
credits=read_csv("tmdb_5000_credits.csv",col_names=TRUE,na="NA")
View(movie)
library(zoo)
class(movie$release_date)
movie$Year=as.factor(format(movie$release_date,"%Y"))
View(movie)
movie$Date=as.factor(format(movie$release_date,"%d"))
movie$month=as.factor(format(movie$release_date,"M"))
movie$month=as.factor(format(movie$release_date,"%M"))
movie$month=as.factor(format(movie$release_date,"%m"))
movie$month=month.abb(as.factor(format(movie$release_date,"%m")))
movie$month=month.abb[(as.factor(format(movie$release_date,"%m")))]
movie %>% group_by(month) %>% summarise(count=n()) %>% arrange(desc(month)) %>% ggplot(aes(reorder(month,count),count,fill=month))+geom_bar(stat="identity")+theme(plot.title=element_text(size=14,face="italic",colour="red",family="bold"),axis.text.x = element_text(angle=90),legend.position="none")+labs(x="",y="Total number of movies released",title="Number of Movies Releases per month")+coord_flip()
movie %>% group_by(month) %>% sdrop_na(month) %>% ummarise(count=n()) %>% arrange(desc(month)) %>% ggplot(aes(reorder(month,count),count,fill=month))+geom_bar(stat="identity")+theme(plot.title=element_text(size=14,face="italic",colour="red",family="bold"),axis.text.x = element_text(angle=90),legend.position="none")+labs(x="",y="Total number of movies released",title="Number of Movies Releases per month")+coord_flip()
movie %>% group_by(month) %>% drop_na(month) %>% ummarise(count=n()) %>% arrange(desc(month)) %>% ggplot(aes(reorder(month,count),count,fill=month))+geom_bar(stat="identity")+theme(plot.title=element_text(size=14,face="italic",colour="red",family="bold"),axis.text.x = element_text(angle=90),legend.position="none")+labs(x="",y="Total number of movies released",title="Number of Movies Releases per month")+coord_flip()
movie %>% group_by(month) %>% drop_na(month) %>% summarise(count=n()) %>% arrange(desc(month)) %>% ggplot(aes(reorder(month,count),count,fill=month))+geom_bar(stat="identity")+theme(plot.title=element_text(size=14,face="italic",colour="red",family="bold"),axis.text.x = element_text(angle=90),legend.position="none")+labs(x="",y="Total number of movies released",title="Number of Movies Releases per month")+coord_flip()
movie %>% group_by(month) %>% drop_na(month) %>% summarise(count=n()) %>% arrange(desc(month)) %>% ggplot(aes(reorder(month,count),count,fill=month))+geom_bar(stat="identity")+theme(plot.title=element_text(size=14,face="italic",colour="red",family="bold"),axis.text.x = element_text(angle=90),legend.position="none")+labs(x="",y="Total number of movies released",title="Number of Movies Releases per month")+coord_flip()+geom_text(aes(label=count,hjust=0.5,color="black"))
movie %>% group_by(month) %>% drop_na(month) %>% summarise(count=n()) %>% arrange(desc(month)) %>% ggplot(aes(reorder(month,count),count,fill=month))+geom_bar(stat="identity")+theme(plot.title=element_text(size=14,face="italic",colour="red",family="bold"),axis.text.x = element_text(angle=90),legend.position="none")+labs(x="",y="Total number of movies released",title="Number of Movies Releases per month")+coord_flip()+geom_text(aes(label=count))
movie %>% group_by(month) %>% drop_na(month) %>% summarise(count=n()) %>% arrange(desc(month)) %>% ggplot(aes(reorder(month,count),count,fill=month))+geom_bar(stat="identity")+theme(plot.title=element_text(size=14,face="italic",colour="red",family="bold"),axis.text.x = element_text(angle=90),legend.position="none")+labs(x="",y="Total number of movies released",title="Number of Movies Releases per month")+coord_flip()+geom_label(aes(label=count))
movie %>% group_by(month) %>% drop_na(month) %>% summarise(count=n()) %>% arrange(desc(month)) %>% ggplot(aes(reorder(month,count),count,fill=month))+geom_bar(stat="identity")+theme(plot.title=element_text(size=14,face="italic",colour="red"),axis.text.x = element_text(angle=90),legend.position="none")+labs(x="",y="Total number of movies released",title="Number of Movies Releases per month")+coord_flip()+geom_label(aes(label=count))
ggplot(movie,aes(month,vote_average,fill=month))+geom_boxplot(outlier.colour = "red")+theme(plot.title=element_text(size=14,face="italic",colour="red"),axis.text.x = element_text(angle=90),legend.position="none")+labs(x="",y="Average Vote",title="Boxplot of Average votes received by month")
ggplot(movie,aes(month,vote_average,fill=month))+geom_boxplot(outlier.colour = "red")+theme(plot.title=element_text(size=14,face="italic",colour="red"),axis.text.x = element_text(angle=90),legend.position="none")+labs(x="",y="Average Vote",title="Boxplot of Average votes received by month")+coord_flip()
ggplot(movie,aes(month,vote_average,fill=month))+geom_boxplot(outlier.colour = "red",na.rm=TRUE)+theme(plot.title=element_text(size=14,face="italic",colour="red"),axis.text.x = element_text(angle=90),legend.position="none")+labs(x="",y="Average Vote",title="Boxplot of Average votes received by month")+coord_flip()
movie %>% drop_na(month) %>% ggplot(aes(month,vote_average,fill=month))+geom_boxplot(outlier.colour = "red",na.rm=TRUE)+theme(plot.title=element_text(size=14,face="italic",colour="red"),axis.text.x = element_text(angle=90),legend.position="none")+labs(x="",y="Average Vote",title="Boxplot of Average votes received by month")+coord_flip()
movie %>% drop_na(month) %>% ggplot(aes(month,vote_average,fill=month))+geom_boxplot(outlier.colour = "red",na.rm=TRUE)+theme(plot.title=element_text(size=14,face="italic",colour="red"),axis.text.x = element_text(angle=90),legend.position="none")+labs(x="",y="Average Vote",title="Boxplot of Average votes received by month")+coord_flip()
temp=movie %>% group_by(month) %>% mutate(median=median(vote_average),low=min(vote_average),high=max(vote_average))
View(temp)
temp=movie %>% select(month,vote_average) %>% ddply(.(month),summary,median=median(vote_average),low=min(vote_average),high=max(vote_average))
View(temp)
temp= ddply(movie,.(month),summary,median=median(vote_average),low=min(vote_average),high=max(vote_average))
View(temp)
temp= ddply(movie,.(month),aggregate,median=median(vote_average),low=min(vote_average),high=max(vote_average))
temp=movie %>% group_by(month) %>% summarise(median=median(vote_average),low=min(vote_average),high=max(vote_average))
View(temp)
temp=movie %>% group_by(month) %>% filter(vote_average!=0)%>%  summarise(median=median(vote_average),low=min(vote_average),high=max(vote_average))
View(temp)
temp=movie %>% group_by(month) %>% filter(vote_average!=0)%>%  summarise(median=median(vote_average),low=min(vote_average),high=max(vote_average)) %>% mutate(score=paste("low","/","high"))
View(temp)
temp=movie %>% group_by(month) %>% filter(vote_average!=0)%>%  summarise(median=median(vote_average),low=min(vote_average),high=max(vote_average)) %>% mutate(score=paste(low,"/",high))
temp=movie %>% group_by(month) %>% filter(vote_average!=0)%>%  summarise(median=median(vote_average),low=min(vote_average),high=max(vote_average)) %>% mutate(score=paste(low,"/",high)) %>% arrange(month)
temp=movie %>% group_by(month) %>% filter(vote_average!=0)%>%  summarise(median=median(vote_average),low=min(vote_average),high=max(vote_average)) %>% mutate(score=paste(low,"/",high)) %>% arrange(factor(month))
temp=movie %>% group_by(month) %>% filter(vote_average!=0)%>%  summarise(median=median(vote_average),low=min(vote_average),high=max(vote_average)) %>% mutate(score=paste(low,"/",high)) %>% arrange(factor(month,level=month.name))
temp=movie %>% group_by(month) %>% filter(vote_average!=0)%>%  summarise(median=median(vote_average),low=min(vote_average),high=max(vote_average)) %>% mutate(score=paste(low,"/",high)) %>% sort(factor(month,level=month.name))
class(movie$month)
movie$month=factor(month,level=month.name)
movie$month=factor(movie$month,level=month.name)
temp=movie %>% group_by(month) %>% filter(vote_average!=0)%>%  summarise(median=median(vote_average),low=min(vote_average),high=max(vote_average)) %>% mutate(score=paste(low,"/",high))
movie$month=factor(movie$month,level=month.name,ifany(is.na(movie$month)))
movie$month=factor(movie$month,level=month.name,exclude="NA")
temp=movie %>% group_by(month) %>% filter(vote_average!=0)%>%  summarise(median=median(vote_average),low=min(vote_average),high=max(vote_average)) %>% mutate(score=paste(low,"/",high))
movie=read_csv("tmdb_5000_movies.csv",col_names=TRUE,na="NA")
install.packages("DiagrammeR")
library(DiagrammeR)
mermaid("
gantt
dateFormat  YYYY-MM-DD
title A Very Nice Gantt Diagram
section Basic Tasks
This is completed             :done,          first_1,    2014-01-06, 2014-01-08
This is active                :active,        first_2,    2014-01-09, 3d
Do this later                 :               first_3,    after first_2, 5d
Do this after that            :               first_4,    after first_3, 5d
section Important Things
Completed, critical task      :crit, done,    import_1,   2014-01-06,24h
Also done, also critical      :crit, done,    import_2,   after import_1, 2d
Doing this important task now :crit, active,  import_3,   after import_2, 3d
Next critical task            :crit,          import_4,   after import_3, 5d
section The Extras
First extras                  :active,        extras_1,   after import_4,  3d
Second helping                :               extras_2,   after extras_1, 20h
More of the extras            :               extras_3,   after extras_1, 48h
")
library(haven)
quiz_1_marks_spartans <- read_sav("~/my files/Great Lakes Files/Courses/Residency 2/Advanced Statistics/practice data/quiz 1 marks spartans.sav")
View(quiz_1_marks_spartans)
library(tidyr)
anovatab=aov(quiz_1_marks_spartans$q1marks~quiz_1_marks_spartans$Section)
quiz_1_marks_spartans$Section=as.factor(quiz_1_marks_spartans$Section)
TukeyHSD(anovatab,conf.level=0.95)
quiz_1_marks_spartans$Section=as.factor(quiz_1_marks_spartans$Section)
anovatab=aov(quiz_1_marks_spartans$q1marks~quiz_1_marks_spartans$Section)
summary(anovatab)
TukeyHSD(anovatab,conf.level=0.95)
anovatab
store_promo_data_anova <- read_sav("~/my files/Great Lakes Files/Courses/Residency 2/Advanced Statistics/practice data/store promo data anova.sav")
str(store_promo_data_anova)
store_promo_data_anova$clirate=NULL
store_promo_data_anova$coupon=as.factor(store_promo_data_anova$coupon)
store_promo_data_anova$ispromo=as.factor(store_promo_data_anova$ispromo)
plot(sales~coupon+ispromo+coupon:ispromo,data=store_promo_data_anova)
interaction.plot(store_promo_data_anova$coupon,store_promo_data_anova$ispromo,store_promo_data_anova$sales,fun=mean)
res=aov(sales~coupon+ispromo+coupon:ispromo,data=store_promo_data_anova)
res
summary(res)
promo_merchandising_data_anova <- read_sav("~/my files/Great Lakes Files/Courses/Residency 2/Advanced Statistics/practice data/promo merchandising data anova.sav")
str(promo_merchandising_data_anova)
promo_merchandising_data_anova$merchand=as.factor(promo_merchandising_data_anova$merchand)
promo_merchandising_data_anova$promo=as.factor(promo_merchandising_data_anova$promo)
promo_merchandising_data_anova$weather=as.factor(promo_merchandising_data_anova$weather)
interaction.plot(promo_merchandising_data_anova$merchand,promo_merchandising_data_anova$promo,promo_merchandising_data_anova$sales,fun=mean)
plot(sales~merchand+promo+weather,data=promo_merchandising_data_anova)
res=aov(sales~merchand+promo+merchand:promo,data=promo_merchandising_data_anova)
summary(res)
comp_ad_covariate_data <- read_sav("~/my files/Great Lakes Files/Courses/Residency 2/Advanced Statistics/practice data/comp ad covariate data.sav")
comp_ad_covariate_data$compadfo=as.factor(comp_ad_covariate_data$compadfo)
comp_ad_covariate_data$compstra=as.factor(comp_ad_covariate_data$compstra)
res=aov(Manipint~compadfo+compstra+compadfo:compstra,data=comp_ad_covariate_data)
summary(res)
interaction.plot(comp_ad_covariate_data$compadfo,comp_ad_covariate_data$compstra,comp_ad_covariate_data$Manipint,fun=mean)
library(QuantPsyc)
page_575_data <- read_sav("~/my files/Great Lakes Files/Courses/Residency 2/Advanced Statistics/practice data/page 575 data.sav")
str(page_575_data)
res=lm(snprefer~comfort+style+durable,data=page_575_data)
lm.beta(res)
summary(res)
sari_preference_dummy_data <- read_sav("~/my files/Great Lakes Files/Courses/Residency 2/Advanced Statistics/practice data/sari preference dummy data.sav")
sari_preference_dummy_data$colour=as.factor(sari_preference_dummy_data$colour)
sari_preference_dummy_data$saripref=as.numeric(sari_preference_dummy_data$saripref)
sari_preference_dummy_data$price=as.numeric(sari_preference_dummy_data$price)
sari_preference_dummy_data$quality=as.numeric(sari_preference_dummy_data$quality)
a=contrasts(sari_preference_dummy_data$colour)
a
contrasts(sari_preference_dummy_data$colour)=contr.treatment(3)
res=lm(saripref~colour+price+quality,data=sari_preference_dummy_data)
summary(res)
lm.beta(res)
nn.dev <- read.table("DEV_SAMPLE.csv", sep = ",", header = T)
nn.holdout <- read.table("HOLDOUT_SAMPLE.csv", sep = ",", header = T)
occ.matrix <- model.matrix(~ Occupation - 1, data = nn.dev)
nn.dev <- data.frame(nn.dev, occ.matrix)
Gender.matrix <- model.matrix(~ Gender - 1, data = nn.dev)
nn.dev <- data.frame(nn.dev, Gender.matrix)
nn.dev <- read.table("DEV_SAMPLE.csv", sep = ",", header = T)
setwd("~/my files/Great Lakes Files/Courses/Residency 2/Data Mining/CART")
nn.dev <- read.table("DEV_SAMPLE.csv", sep = ",", header = T)
occ.matrix <- model.matrix(~ Occupation - 1, data = nn.dev)
nn.dev <- data.frame(nn.dev, occ.matrix)
Gender.matrix <- model.matrix(~ Gender - 1, data = nn.dev)
nn.dev <- data.frame(nn.dev, Gender.matrix)
occ.matrix <- model.matrix(~ Occupation - 1, data = nn.holdout)
nn.holdout <- read.table("HOLDOUT_SAMPLE.csv", sep = ",", header = T)
nn.holdout <- data.frame(nn.holdout, occ.matrix)
occ.matrix <- model.matrix(~ Occupation - 1, data = nn.holdout)
nn.holdout <- data.frame(nn.holdout, occ.matrix)
Gender.matrix <- model.matrix(~ Gender - 1, data = nn.holdout)
nn.holdout <- data.frame(nn.holdout, Gender.matrix)
x <- subset(nn.dev,
select = c("Age","Balance", "SCR", "No_OF_CR_TXNS", "Holding_Period"
,"OccupationPROF", "OccupationSAL", "OccupationSELF.EMP", "OccupationSENP","GenderF", "GenderM", "GenderO"
)
)
nn.devscaled <- scale(x)
nn.devscaled <- cbind(nn.dev[2], nn.devscaled)
View(nn.devscaled)
nn2 <- neuralnet(formula = Target ~  Age + Balance  + SCR +  No_OF_CR_TXNS + Holding_Period
+ OccupationPROF + OccupationSAL + OccupationSELF.EMP + OccupationSENP + GenderF + GenderM + GenderO,
data = nn.devscaled,
hidden = 3,
err.fct = "sse",
linear.output = FALSE,
lifesign = "full",
lifesign.step = 1,
threshold = 0.1,
stepmax = 2000
)
library(neuralnet)
nn2 <- neuralnet(formula = Target ~  Age + Balance  + SCR +  No_OF_CR_TXNS + Holding_Period
+ OccupationPROF + OccupationSAL + OccupationSELF.EMP + OccupationSENP + GenderF + GenderM + GenderO,
data = nn.devscaled,
hidden = 3,
err.fct = "sse",
linear.output = FALSE,
lifesign = "full",
lifesign.step = 1,
threshold = 0.1,
stepmax = 2000
)
plot(nn2)
nn.dev$Prob = nn2$net.result[[1]]
quantile(nn.dev$Prob, c(0,1,5,10,25,50,75,90,95,99,100)/100)
hist(nn.dev$Prob)
decile <- function(x){
deciles <- vector(length=10)
for (i in seq(0.1,1,.1)){
deciles[i*10] <- quantile(x, i, na.rm=T)
}
return (
ifelse(x<deciles[1], 1,
ifelse(x<deciles[2], 2,
ifelse(x<deciles[3], 3,
ifelse(x<deciles[4], 4,
ifelse(x<deciles[5], 5,
ifelse(x<deciles[6], 6,
ifelse(x<deciles[7], 7,
ifelse(x<deciles[8], 8,
ifelse(x<deciles[9], 9, 10
))))))))))
}
nn.dev$deciles <- decile(nn.dev$Prob)
library(data.table)
tmp_DT = data.table(nn.dev)
rank <- tmp_DT[, list(
cnt = length(Target),
cnt_resp = sum(Target),
cnt_non_resp = sum(Target == 0)) ,
by=deciles][order(-deciles)]
rank$rrate <- round (rank$cnt_resp / rank$cnt,2);
rank$cum_resp <- cumsum(rank$cnt_resp)
rank$cum_non_resp <- cumsum(rank$cnt_non_resp)
rank$cum_rel_resp <- round(rank$cum_resp / sum(rank$cnt_resp),2);
rank$cum_rel_non_resp <- round(rank$cum_non_resp / sum(rank$cnt_non_resp),2);
rank$ks <- abs(rank$cum_rel_resp - rank$cum_rel_non_resp);
library(scales)
rank$rrate <- percent(rank$rrate)
rank$cum_rel_resp <- percent(rank$cum_rel_resp)
rank$cum_rel_non_resp <- percent(rank$cum_rel_non_resp)
View(rank)
library(caret)
confusionMatrix(nn.dev$Target, nn.dev$Class)
nn.dev$Class = ifelse(nn.dev$Prob>0.21,1,0)
with( nn.dev, table(Target, as.factor(Class)  ))
confusionMatrix(nn.dev$Target, nn.dev$Class)
library(ineq)
gini = ineq(nn.dev$Prob, type="Gini")
gini
library(ROCR)
pred <- prediction(nn.dev$Prob, nn.dev$Target)
perf <- performance(pred, "tpr", "fpr")
plot(perf)
KS <- max(attr(perf, 'y.values')[[1]]-attr(perf, 'x.values')[[1]])
auc <- performance(pred,"auc");
auc <- as.numeric(auc@y.values)
auc
KS
x <- subset(nn.holdout,
select = c("Age","Balance", "SCR", "No_OF_CR_TXNS", "Holding_Period")
)
x.scaled <- scale(x)
compute.output = compute(nn2, x.scaled)
setwd("~/Downloads/R/Clinton Trump Tweets/Hillary-Trump-Tweet-Analysis")
knitr::opts_chunk$set(echo = TRUE,warning=FALSE,message=FALSE)
library(lubridate)
library(ggplot2)
library(dplyr)
library(tidytext)
library(tm)
library(wordcloud)
library(readr)
library(tidyr)
library(RColorBrewer)
library(stringr)
library(RSentiment)
library(cowplot)
library(ggthemes)
library(knitr)
library(kableExtra)
tweets=read.csv("tweets.csv",header=TRUE,stringsAsFactors = FALSE)
summary(tweets)
tweets$time=ymd_hms(tweets$time)
tweets$year=as.numeric(year(tweets$time))
tweets$month=as.numeric(month(tweets$time))
tweets$clock=as.numeric(hour(tweets$time))
ggplot(tweets,aes(month,fill=handle))+geom_histogram(binwidth=1,aes(y=..count..))+facet_wrap(~handle,ncol=1,scales="free")+scale_x_continuous(limits=c(1,12),breaks=seq(1,12,1))
temp=tweets  %>%  filter(!(is_retweet=="True")) %>% select(handle,clock)
temp=temp %>% group_by(handle,clock) %>% tally()
ggplot(temp,aes(clock,n,fill=handle,color=handle))+geom_point()+geom_line()+theme(legend.position="bottom",plot.title=element_text(hjust=0.5))+labs(x="Time(Hrs)",y="Tweet Count",title="Tweet Distribution by Time")+scale_x_continuous(limits=c(0,23),breaks=seq(0,23,1))
#ggsave("tweettime.jpeg")
temp=tweets %>% filter(!(is_retweet=="True")) %>% select(handle,month)
temp=temp %>% group_by(handle,month) %>% tally()
ggplot(temp,aes(month,n,fill=handle,color=handle))+geom_point()+geom_line()+theme_fivethirtyeight()+theme(legend.position="bottom",plot.title=element_text(hjust=0.5))+labs(x="Month",y="Tweet Count",title="Tweet Distribution by Month")+scale_x_continuous(limits=c(1,12),breaks=seq(1,12,1))
tweets$len=str_count(tweets$text)
temp=tweets %>% group_by(handle) %>% summarise(mediancount=median(len,na.rm=TRUE)) %>% ungroup() %>% mutate(account=reorder(handle,mediancount))
ggplot(temp,aes(x = handle,y = mediancount,fill=handle)) +
geom_bar(stat='identity') +
geom_text(aes(label = paste0("(",mediancount,")",sep="")),
hjust=0, vjust=.5, size = 4, colour = 'black',
fontface = 'bold') +
labs(x = 'Account',
y = 'Count',
title = 'Account and Count') +
coord_flip() +
theme_bw()+theme(legend.position="none")
temp=tweets %>% select(handle,is_retweet,original_author) %>% filter(is_retweet=="True")  %>% group_by(handle,original_author) %>% tally()
temp=temp[temp$n>5,]
plot1=ggplot(temp[temp$handle=="HillaryClinton",],aes(reorder(original_author,n),n,fill=original_author))+geom_bar(stat="identity")+theme_fivethirtyeight()+theme(legend.position = "none",axis.text.x=element_text(angle=90),plot.title=element_text(hjust=0.5))+labs(x="",y="Count",title="Retweet Count-Hillary",subtitle="Accounts from which candidates have retweeted more than 5 times")
plot2=ggplot(temp[temp$handle=="realDonaldTrump",],aes(reorder(original_author,n),n,fill=original_author))+geom_bar(stat="identity")+theme_fivethirtyeight()+theme(legend.position = "none",axis.text.x=element_text(angle=90),plot.title=element_text(hjust=0.5))+labs(x="",y="Count",title="Retweet Count-Trump",subtitle="Accounts from which candidates have retweeted more than 5 times")
plot_grid(plot1,plot2,align="v")
theme_set(theme_cowplot(font_size=12))
Hillary=subset(tweets,handle=="HillaryClinton")
Hillary=Hillary %>% filter(!(is_retweet=="True"))
Trump=subset(tweets,handle=="realDonaldTrump")
Trump=Trump %>% filter(!(is_retweet=="True"))
clean=function(x){
x$text=str_replace_all(x$text,'[^[:alnum:]]',' ')
x$text=gsub("[[:digit:]]"," ",x$text)
x$text=gsub("[\t]{2,}"," ",x$text)
x$text=gsub("https.*"," ",x$text)
return(x)
}
head(Hillary$text)
Hillary=as.data.frame(clean(Hillary))
Trump=as.data.frame(clean(Trump))
corpus=Corpus(VectorSource(list(Hillary$text)))
corpus = tm_map(corpus, removePunctuation)
corpus = tm_map(corpus, content_transformer(tolower))
corpus = tm_map(corpus, removeNumbers)
corpus = tm_map(corpus, stripWhitespace)
corpus = tm_map(corpus, removeWords, stopwords('english'))
dtm_Hillary = DocumentTermMatrix(VCorpus(VectorSource(corpus[[1]]$content)))
freq_Hillary <- colSums(as.matrix(dtm_Hillary))
sentiments_Hillary = calculate_sentiment(names(freq_Hillary))
sentiments_Hillary = cbind(sentiments_Hillary, as.data.frame(freq_Hillary))
positive=sentiments_Hillary[sentiments_Hillary$sentiment=="Positive",]
positive=positive %>% arrange(desc(freq_Hillary))
negative=sentiments_Hillary[sentiments_Hillary$sentiment=="Negative",]
negative=negative %>% arrange(desc(freq_Hillary))
neutral=sentiments_Hillary[sentiments_Hillary$sentiment=="Neutral",]
neutral=neutral %>% arrange(desc(freq_Hillary))
wordcloud(positive$text,positive$freq_Hillary,scale=c(4,.5),min.freq=10,max.words = 100,random.order=FALSE,random.color=TRUE,rot.per=0.4,colors=brewer.pal(7,"Dark2"))
wordcloud(negative$text,negative$freq_Hillary,scale=c(4,.1),random.order=FALSE,random.color=TRUE,min.freq=20,colors=brewer.pal(7,"Dark2"))
wordcloud(neutral$text,neutral$freq_Hillary,scale=c(4,.5),min.freq=60,random.order=FALSE,random.color=TRUE,colors=brewer.pal(7,"Dark2"))
head(Trump$text)
corpus=Corpus(VectorSource(list(Trump$text)))
corpus = tm_map(corpus, removePunctuation)
corpus = tm_map(corpus, content_transformer(tolower))
corpus = tm_map(corpus, removeNumbers)
corpus = tm_map(corpus, stripWhitespace)
corpus = tm_map(corpus, removeWords, stopwords('english'))
dtm_Trump = DocumentTermMatrix(VCorpus(VectorSource(corpus[[1]]$content)))
freq_Trump <- colSums(as.matrix(dtm_Trump))
sentiments_Trump = calculate_sentiment(names(freq_Trump))
sentiments_Trump = cbind(sentiments_Trump, as.data.frame(freq_Trump))
positive=sentiments_Trump[sentiments_Trump$sentiment=="Positive",]
positive=positive %>% arrange(desc(freq_Trump))
negative=sentiments_Trump[sentiments_Trump$sentiment=="Negative",]
negative=negative %>% arrange(desc(freq_Trump))
neutral=sentiments_Trump[sentiments_Trump$sentiment=="Neutral",]
neutral=neutral %>% arrange(desc(freq_Trump))
wordcloud(positive$text,positive$freq_Trump,random.order=FALSE,random.color=TRUE,rot.per=0.4,colors=brewer.pal(7,"Dark2"))
wordcloud(negative$text,negative$freq_Trump,random.order=FALSE,random.color=TRUE,colors=brewer.pal(7,"Dark2"))
wordcloud(neutral$text,neutral$freq_Trump,random.order=FALSE,random.color=TRUE,colors=brewer.pal(7,"Dark2"))
temp=subset(tweets,!(is.na(tweets$text)))
temp=as.data.frame(clean(temp))
temp=temp %>% unnest_tokens(word,text) %>% count(handle,word,sort=TRUE) %>% ungroup()
total_words=temp %>% group_by(handle) %>% summarise(count=n())
temp=left_join(temp,total_words)
kable(head(temp,20),"html") %>% kable_styling(bootstrap_options="condensed",position="center")
ggplot(temp,aes(n/count,fill=handle))+geom_histogram(show.legend = FALSE)+facet_wrap(~handle,scales="free")+xlim(NA,0.0030)+labs(x="TF",y="Count",title="Term Frequency for Each Handle")
temp=temp %>% filter(!(is.na(handle))) %>% bind_tf_idf(word,handle,n)
temp1=temp %>% select(-count) %>% arrange(desc(tf_idf)) %>% mutate(word=factor(word,levels=rev(unique(word))))
temp1 %>% group_by(handle) %>% top_n(20) %>% ungroup() %>% ggplot(aes(word,tf_idf,fill=handle))+geom_col(show.legend=FALSE)+labs(x="",y="tf-idf",title="Top 20 Words")+facet_wrap(~handle,ncol=2,scales="free")+coord_flip()
#ggsave("top20.jpeg")
par(mfrow=c(1,2))
temp1 %>% filter(handle=="HillaryClinton") %>% with(wordcloud(word,tf_idf,max.words=100,colors=brewer.pal(8,"Set1")))
text(x=0.5,y=1,"Hillary's Tweets")
temp1 %>% filter(handle=="realDonaldTrump") %>% with(wordcloud(word,tf_idf,max.words=100,colors=brewer.pal(8,"Dark2")))
text(x=0.5,y=1,"Trump's Tweets")
par(mfrow=c(1,1))
temp=clean(tweets)
temp=temp %>% select(handle,text) %>% unnest_tokens(bigram,text,token="ngrams",n=2)
kable(head(temp,10),"html") %>% kable_styling(bootstrap_options="condensed",position="center")
tempseperated=temp %>% separate(bigram,c("word1","word2"),sep=" ")
tempfiltered=tempseperated %>% filter(!(word1 %in% stop_words$word)) %>% filter(!(word2 %in% stop_words$word))
temp=tempfiltered %>% unite(bigramwords,word1,word2,sep=" ") %>% group_by(bigramwords,handle) %>% tally()%>% ungroup() %>% arrange(desc(n))  %>% mutate(bigramwords=factor(bigramwords,levels=rev(unique(bigramwords))))
temp %>% group_by(handle)  %>% top_n(20) %>% ggplot(aes(bigramwords,n,fill=handle))+geom_col(show.legend=FALSE)+labs(x="",y="Count")+facet_wrap(~handle,ncol=2,scales="free")+coord_flip()
temp =temp %>% bind_tf_idf(bigramwords,handle,n)
temp1=temp %>% select(-n) %>% arrange(desc(tf_idf)) %>% mutate(bigramwords=factor(bigramwords,levels=rev(unique(bigramwords))))
temp1 %>% group_by(handle) %>% top_n(20) %>% ungroup() %>% ggplot(aes(bigramwords,tf_idf,fill=handle))+geom_col(show.legend=FALSE)+labs(x="",y="tf-idf",title="Top 20 Bigrams")+facet_wrap(~handle,ncol=2,scales="free")+coord_flip()
temp=tweets %>% select(handle,text)
temp$hashtag=as.character(str_extract_all(temp$text,"#\\S+"))
temp$hashtag=ifelse(temp$hashtag=='character(0)',NA,temp$hashtag)
temp=temp %>% group_by(handle,hashtag)  %>% drop_na(hashtag) %>% tally()
hashhil=temp %>% filter(handle=="HillaryClinton") %>% arrange(desc(n))
hashtrum=temp %>% filter(handle=="realDonaldTrump") %>% arrange(desc(n))
p1=ggplot(head(hashhil,20),aes(reorder(hashtag,n),n,fill=hashtag))+geom_bar(stat="identity")+theme(legend.position="none",axis.text.x=element_text(angle=90,vjust=0.5),plot.title=element_text(hjust=0.5))+labs(x="Hashtag",y="Count",title="20 Popular Hashtags used by Hillary")+coord_flip()
p2=ggplot(head(hashtrum,20),aes(reorder(hashtag,n),n,fill=hashtag))+geom_bar(stat="identity")+theme(legend.position="none",axis.text.x=element_text(angle=90,vjust=0.5),plot.title=element_text(hjust=0.5))+labs(x="Hashtag",y="Count",title="20 Popular Hashtags used by Trump")+coord_flip()
plot_grid(p1,p2,ncol=1,align="v")
temp=clean(tweets)
temp=temp %>% select(handle,text) %>% unnest_tokens(trigram,text,token="ngrams",n=3)
kable(head(temp,10),"html") %>% kable_styling(bootstrap_options="condensed",position="center")
tempseperated=temp %>% separate(trigram,c("word1","word2","word3"),sep=" ")
View(tempseperated)
tempfiltered=tempseperated %>% filter(!(word1 %in% stop_words$word)) %>% filter(!(word2 %in% stop_words$word)) %>% filter(!(word3 %in% stop_words$word))
View(tempfiltered)
temp=tempfiltered %>% unite(trigramwords,word1,word2,word3,sep=" ") %>% group_by(trigramwords,handle) %>% tally()%>% ungroup() %>% arrange(desc(n))  %>% mutate(trigramwords=factor(trigramwords,levels=rev(unique(bigramwords))))
temp=tempfiltered %>% unite(trigramwords,word1,word2,word3,sep=" ") %>% group_by(trigramwords,handle) %>% tally()%>% ungroup() %>% arrange(desc(n))  %>% mutate(trigramwords=factor(trigramwords,levels=rev(unique(trigramwords))))
View(temp)
temp %>% group_by(handle)  %>% top_n(20) %>% ggplot(aes(trigramwords,n,fill=handle))+geom_col(show.legend=FALSE)+labs(x="",y="Count")+facet_wrap(~handle,ncol=2,scales="free")+coord_flip()
temp %>% group_by(handle)  %>% top_n(20) %>% ggplot(aes(trigramwords,n,fill=handle))+geom_col(show.legend=FALSE)+labs(x="",y="Count")+facet_wrap(~handle,ncol=2,scales="free")+coord_flip()
temp %>% group_by(handle)  %>% top_n(20) %>% ggplot(aes(trigramwords,n,fill=handle))+geom_col(show.legend=FALSE)+labs(x="",y="Count")+facet_wrap(~handle,ncol=2,scales="free")+coord_flip()
temp =temp %>% bind_tf_idf(trigramwords,handle,n)
temp1=temp %>% select(-n) %>% arrange(desc(tf_idf)) %>% mutate(bigramwords=factor(bigramwords,levels=rev(unique(bigramwords))))
temp1=temp %>% select(-n) %>% arrange(desc(tf_idf)) %>% mutate(trigramwords=factor(trigramwords,levels=rev(unique(bigramwords))))
temp1=temp %>% select(-n) %>% arrange(desc(tf_idf)) %>% mutate(trigramwords=factor(trigramwords,levels=rev(unique(trigramwords))))
View(temp1)
temp1 %>% group_by(handle) %>% top_n(20) %>% ungroup() %>% ggplot(aes(trigramwords,tf_idf,fill=handle))+geom_col(show.legend=FALSE)+labs(x="",y="tf-idf",title="Top 20 Trigrams")+facet_wrap(~handle,ncol=2,scales="free")+coord_flip()
temp1 %>% group_by(handle) %>% top_n(20) %>% ungroup() %>% ggplot(aes(trigramwords,tf_idf,fill=handle))+geom_col(show.legend=FALSE)+labs(x="",y="tf-idf",title="Top 20 Trigrams")+facet_wrap(~handle,ncol=2,scales="free")+coord_flip()
